//  Bemit
//  ==========================================================================
//
// source: https://github.com/danielguillan/bem-constructor


//  Component
//  --------------------------------------------------------------------------

component($name)
  {'.' + $bemit-component-prefix + '-' + $name}
    {block}


//  Object
//  --------------------------------------------------------------------------

object($name)
  {'.' + $bemit-object-prefix + '-' + $name}
    {block}


//  Utility
//  --------------------------------------------------------------------------

utility($name)
  {'.' + $bemit-utility-prefix + '-' + $name}
    {block}


//  Scope
//  --------------------------------------------------------------------------

scope($name)
  {'.' + $bemit-scope-prefix + '-' + $name}
    {block}


//  Element
//  --------------------------------------------------------------------------

_element()
  $list = ''
  $reference = '&'
  if match('.' + $bemit-state-prefix + '-', selector('&')) || match($bemit-modifier-separator, selector('&')) || match($bemit-suffix-prefix, selector('&'))
    $reference = '& ' + '^[-1]'
  for $name in arguments
    $list = ($list + $reference + $bemit-element-separator + $name + '\n')
  return $list

element()
  $arguments = arguments
  $block = pop($arguments)
  {_element($arguments)}
    $block()


//  Modifier
//  --------------------------------------------------------------------------

_modifier()
  $list = ''
  $reference = '&'
  if match('.' + $bemit-state-prefix + '-', selector('&')) || match($bemit-suffix-prefix, selector('&'))
    $reference = '& ' + '^[-1]'
  for $name in arguments
    $list = ($list + $reference + $bemit-modifier-separator + $name + '\n')
  return $list

modifier()
  $arguments = arguments
  $block = pop($arguments)
  {_modifier($arguments)}
    $block()


//  State
//  --------------------------------------------------------------------------

_state()
  $list = ''
  $reference = '&'
  if match($bemit-modifier-separator, selector('&')) || match($bemit-suffix-prefix, selector('&'))
    $reference = '& ' + '^[-1]'
  for $name in arguments
    $list = ($list + $reference + '.' + $bemit-state-prefix + '-' + $name + '\n')
  return $list

state()
  $arguments = arguments
  $block = pop($arguments)
  {_state($arguments)}
    $block()


//  Suffix
//  --------------------------------------------------------------------------

suffix($name, $block)
  $reference = '&'
  if match('.' + $bemit-state-prefix + '-', selector('&')) || match($bemit-modifier-separator, selector('&'))
    $reference = '& ' + '^[-1]'
  {$reference + $bemit-suffix-prefix + $name}
    $block()


//  Debug
//  --------------------------------------------------------------------------

bemit-debug()
  // elements
  [class*={'"' + $bemit-element-separator + '"'}]
    outline: $bemit-debug-styles['elements']

  // modifiers
  [class*={'"' + $bemit-modifier-separator + '"'}]
    outline: $bemit-debug-styles['modifiers']

  // objects
  [class^={'"' + $bemit-object-prefix + '"'}]
  [class*={'" ' + $bemit-object-prefix + '"'}]
    outline: $bemit-debug-styles['objects']

  // components
  [class^={'"' + $bemit-component-prefix + '"'}]
  [class*={'" ' + $bemit-component-prefix + '"'}]
    outline: $bemit-debug-styles['components']

  // utilities
  [class^={'"' + $bemit-utility-prefix + '"'}]
  [class*={'" ' + $bemit-utility-prefix + '"'}]
    outline: $bemit-debug-styles['utilities']
